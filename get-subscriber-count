#!/usr/bin/env bash
#
# Usage: get-subscriber-count <channel> [file] [interval]
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: September 04, 2021
# License: MIT

. ./lib/utils || exit 1

channel=$1
file=$2
interval=$3

usage() {
	local prog=${0##*/}
	cat <<-EOF
	Usage: $prog <channel> [file] [interval]

	Get the subscriber count for the given YouTube channel.

	Examples:

	With a single argument, the output is written to stdout:

	    $ ./get-subscriber-count bahamas10
	    2.93K subscribers

	With a second argument, the output is written (atomically) to the file:

	    $ ./get-subscriber-count bahamas10 foo.txt
	    $ cat foo.txt
	    2.93K subscribers

	With a third argument, the output will is written (atomically) to the
	file infinitely at the given interval:

	    $ ./get-subscriber-count bahamas10 foo.txt 5
	    [2021-09-04T21:02:17-0400] 2.93K subscribers - file=foo.txt sleeping for 5
	    [2021-09-04T21:02:22-0400] 2.93K subscribers - file=foo.txt sleeping for 5
	EOF
}

if [[ -z $channel || $channel == '-h' ]]; then
	usage
	exit 1
fi

[[ -n $channel ]] || fatal 'channel must be specified as arg 1'

tmp=$file.tmp

extract-sub-count() {
	perl -wln -e '/"subscriberCountText":\{[^}]+"label":"([^"]+)"/ and print $1;'
}

get-sub-count() {
	local channel=$1
	local html subcount
	local url="https://www.youtube.com/c/$channel/about"

	html=$(curl -LsS "$url")

	if (($? != 0)) || [[ -z $html ]]; then
		echo 'failed to get sub count' >&2
		return 1
	fi

	subcount=$(extract-sub-count <<< "$html")

	if [[ -z $subcount ]]; then
		echo 'failed to extract sub count' >&2
		return 1
	fi

	echo "$subcount"
}

while true; do
	subcount=$(get-sub-count "$channel")
	code=$?

	if [[ -z $file ]]; then
		((code == 0)) && echo "$subcount"
		exit "$code"
	fi

	# $file is set at this point
	if ((code == 0)); then
		echo "$subcount" > "$tmp" &&
			mv "$tmp" "$file"

	fi

	# quit here if no interval
	if [[ -z $interval ]]; then
		exit "$code"
	fi

	log "$subcount - file=$file sleeping for $interval"
	sleep "$interval" || fatal 'failed to sleep'
done
